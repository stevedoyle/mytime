name: Python CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements.txt'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements.txt'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"] # Test across multiple Python versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # If you use pipenv:
        # pip install pipenv
        # pipenv install --dev --skip-lock
        # If you use poetry:
        # pip install poetry
        # poetry install --no-root
        # Otherwise (for requirements.txt):
        pip install -r requirements.txt

    - name: Run Linting (e.g., Ruff)
      run: |
        pip install ruff
        ruff check *.py
        ruff check tests/
        ruff format . --check

    - name: Run Tests (Pytest)
      run: |
        pip install -e .
        pip install pytest pytest-cov
        pytest --cov=. --cov-report=xml --cov-report=term-missing
